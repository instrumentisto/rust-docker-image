name: Beta CI

on:
  schedule:
    - cron: "33 */2 * * *"
  workflow_dispatch: {}

env:
  NAME: rust

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - alpine3.22
          - alpine3.21
          - alpine3.20
          - bookworm
          - bookworm-slim
          - bullseye
          - bullseye-slim
          - trixie
          - trixie-slim
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Check upstream version changed
        id: upstream
        run: |
          result=$(bash beta/check-changed.sh 2>&1)
          echo "$result"
          echo 'result<<EOF'$'\n'"$result"$'\n'EOF >> $GITHUB_OUTPUT
        env:
          IMAGE: ghcr.io/${{ github.repository_owner }}/${{ env.NAME }}
          IMAGE_OS: ${{ matrix.os }}

      - uses: docker/setup-buildx-action@v3
        if: ${{ contains(steps.upstream.outputs.result, 'CHANGED') }}

      - name: Build image
        run: docker build --network=host --force-rm --no-cache --pull
                    --label org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
                    -t ${{ github.repository_owner }}/${{ env.NAME }}:build-${{ matrix.os }}
                    ./beta/${{ matrix.os }}/
        if: ${{ contains(steps.upstream.outputs.result, 'CHANGED') }}

      - name: Tar image
        run: docker save -o image.tar
                    ${{ github.repository_owner }}/${{ env.NAME }}:build-${{ matrix.os }}
        if: ${{ contains(steps.upstream.outputs.result, 'CHANGED') }}
      - uses: actions/upload-artifact@v5
        with:
          name: build-${{ matrix.os }}-${{ github.run_number }}
          path: image.tar
          retention-days: 1
        if: ${{ contains(steps.upstream.outputs.result, 'CHANGED') }}

  push:
    needs: ["build"]
    strategy:
      fail-fast: false
      matrix:
        registry: ["ghcr.io", "docker.io", "quay.io"]
        os:
          - alpine3.22
          - alpine3.21
          - alpine3.20
          - bookworm
          - bookworm-slim
          - bullseye
          - bullseye-slim
          - trixie
          - trixie-slim
        include:
          - os: alpine3.22
            tags: |
              <full-ver>-alpine3.22
              <full-ver>-alpine
              <num-ver>-beta-alpine3.22
              <num-ver>-beta-alpine
              beta-alpine3.22
              beta-alpine
          - os: alpine3.21
            tags: |
              <full-ver>-alpine3.21
              <num-ver>-beta-alpine3.21
              beta-alpine3.21
          - os: alpine3.20
            tags: |
              <full-ver>-alpine3.20
              <num-ver>-beta-alpine3.20
              beta-alpine3.20
          - os: bookworm
            tags: |
              <full-ver>-bookworm
              <num-ver>-beta-bookworm
              beta-bookworm
          - os: bookworm-slim
            tags: |
              <full-ver>-bookworm-slim
              <num-ver>-beta-bookworm-slim
              beta-bookworm-slim
          - os: bullseye
            tags: |
              <full-ver>-bullseye
              <num-ver>-beta-bullseye
              beta-bullseye
          - os: bullseye-slim
            tags: |
              <full-ver>-bullseye-slim
              <num-ver>-beta-bullseye-slim
              beta-bullseye-slim
          - os: trixie
            tags: |
              <full-ver>-trixie
              <full-ver>
              <num-ver>-beta-trixie
              <num-ver>-beta
              beta-trixie
              beta
          - os: trixie-slim
            tags: |
              <full-ver>-trixie-slim
              <full-ver>-slim
              <num-ver>-beta-trixie-slim
              <num-ver>-beta-slim
              beta-trixie-slim
              beta-slim
    runs-on: ubuntu-latest
    steps:
      # Skip if this is fork and no credentials are provided.
      - id: skip
        run: echo "no=${{ !(
               github.repository_owner != 'instrumentisto'
               && ((matrix.registry == 'quay.io'
                    && secrets.QUAYIO_ROBOT_USER == '')
                || (matrix.registry == 'docker.io'
                    && secrets.DOCKERHUB_BOT_USER == ''))
             ) }}" >> $GITHUB_OUTPUT

      - name: Check new image was built
        id: artifact
        uses: LIT-Protocol/artifact-exists-action@v0
        with:
          name: build-${{ matrix.os }}-${{ github.run_number }}

      - uses: actions/checkout@v5
        if: ${{ steps.skip.outputs.no == 'true'
             && steps.artifact.outputs.exists == 'true' }}

      - uses: actions/download-artifact@v5
        with:
          name: build-${{ matrix.os }}-${{ github.run_number }}
        if: ${{ steps.skip.outputs.no == 'true'
             && steps.artifact.outputs.exists == 'true' }}
      - name: Untar image
        run: docker load -i image.tar
        if: ${{ steps.skip.outputs.no == 'true'
             && steps.artifact.outputs.exists == 'true' }}

      - name: Login to ${{ matrix.registry }} container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ matrix.registry }}
          username: ${{ (matrix.registry == 'docker.io'
                         && secrets.DOCKERHUB_BOT_USER)
                     || (matrix.registry == 'quay.io'
                         && secrets.QUAYIO_ROBOT_USER)
                     || github.repository_owner }}
          password: ${{ (matrix.registry == 'docker.io'
                         && secrets.DOCKERHUB_BOT_PASS)
                     || (matrix.registry == 'quay.io'
                         && secrets.QUAYIO_ROBOT_TOKEN)
                     || secrets.GITHUB_TOKEN }}
        if: ${{ steps.skip.outputs.no == 'true'
             && steps.artifact.outputs.exists == 'true' }}

      - name: Push image
        run: bash beta/push.sh
        env:
          IMAGE_FROM: ${{ github.repository_owner }}/${{ env.NAME }}:build-${{ matrix.os }}
          IMAGE: ${{ matrix.registry }}/${{ github.repository_owner }}/${{ env.NAME }}
          IMAGE_TAGS: ${{ matrix.tags }}
        if: ${{ steps.skip.outputs.no == 'true'
             && steps.artifact.outputs.exists == 'true' }}
